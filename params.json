{"name":"Madrox","body":"## USAGE\r\n\r\nMadrox needs an existing repository with at a single initial commit.  \"Tweets\"\r\nare simply commits in a user-specific branch.  Use git to push/pull these \r\nbranches with remote git repositories.  Create custom timelines by merging\r\nthem locally.\r\n\r\n    $ cd madrox-sample\r\n    $ git init\r\n    $ touch README\r\n    $ git add README\r\n    $ git commit -m \"initial\"\r\n\r\n    $ madrox rick --email=rick@whatever.com --msg=\"Hi\"\r\n    @rick: Hi\r\n    8578cec211388123e071eccb1fda2024a44ac4c5\r\n\r\n    $ madrox bob --email=bob@whatever.com --msg=\"@rick: sup?\"\r\n    @bob: @rick: sup?\r\n    002e1e01517ef2e5486b696814146d5cca4c07a2\r\n\r\n    $ madrox rick --email=rick@whatever.com --msg=\"@bob: nada\"\r\n    @rick: @bob: nada\r\n    178f84a58ab1878d1a995ba9ce16ad11e5e58808\r\n\r\nNow, we have three tweets from two different users in their own branch.  You\r\ncan merge these two branches into a single branch to see their commits in one\r\nstream:\r\n\r\n    $ git branch\r\n      bob\r\n    * master\r\n      rick\r\n\r\n    # Create a new branch\r\n    $ git checkout -b timeline\r\n    $ git merge rick\r\n    $ git merge bob\r\n\r\n    $ madrox rick\r\n    @rick: @bob: nada\r\n    @rick: Hi\r\n\r\n    $ madrox timeline\r\n    @rick: @bob: nada\r\n    @bob: @rick: sup?\r\n    @rick: Hi\r\n\r\n## Importing\r\n\r\nYou can import tweets with the `--import` option.  You're still bound by Twitter's 3200 tweet limit, unfortunately.\r\n\r\n    $ madrox --import=twitter --since-id=123 --max-id=456 --email=EMAIL TWITTER_LOGIN\r\n\r\n    You can also use `rake console` and import the data yourself from other sources.\r\n\r\n    $ madrox --irb --email=EMAIL TWITTER_LOGIN\r\n    >> tweets.each do |tweet|\r\n    ?>   timeline.post(tweet['text'], :committed_date => Time.parse(tweet['created_at']))\r\n    ?> end\r\n\r\n## Ruby API\r\n\r\nThe Madrox ruby API revolves around two objects:  `Madrox::Repo` and \r\n`Madrox::Timeline`.\r\n\r\n`Madrox::Repo` simply tracks the Git repo.  It's used to create Timeline\r\ninstances.\r\n\r\n```ruby\r\nrepo = Madrox::Repo.new \"/path/to/repo\"\r\ntimeline = repo.timeline('rick', 'rick@email.com')\r\n```\r\n\r\n`Madrox::Timeline` represents a branch of the Git repo, and lets you post\r\nnew messages to it.  These branches can either represent a user's timeline,\r\na grouped timeline with commits merged from multiple users, or something \r\ncustom (such as a user's favorites).\r\n\r\n```ruby\r\ntimeline.post(\"Eating a sandwich.\")\r\n```\r\n\r\nYou can list messages from a timeline.  They come out as `Grit::Commit` \r\ninstances.\r\n\r\n```ruby\r\nmine = repo.timeline('me', 'my-email@email.com')\r\nrick = repo.timeline('rick')\r\nmsg = rick.messages.first\r\nmsg.sha            # => 21f1ca7995b46a1008c402c92c4aa074806f92c4\r\nmsg.message        # => \"Eating a sandwich.\"\r\nmsg.committer      # => #<Grit::Actor \"rick ...\">\r\nmsg.committed_date # => Sat Nov 6 11:48:02 -0700 2010\r\n```\r\n\r\nYou can add a message as a favorite:\r\n\r\n```ruby\r\nsha = mine.fave(msg)\r\ncommit = mine.grit.commit(sha)\r\ncommit.sha            # => b1dfaf30dff279b953abc8b985bb41e247a0e50c\r\ncommit.message        # => \"Eating a sandwich.\"\r\ncommit.committer      # => #<Grit::Actor \"me ...\">\r\ncommit.committed_date # => Sat Nov 6 12:48:02 -0700 2010\r\ncommit.author         # => #<Grit::Actor \"rick ...\">\r\ncommit.authored_date  # => Sat Nov 6 11:48:02 -0700 2010\r\n```\r\n\r\nYou can also retweet the message:\r\n\r\n```ruby\r\nsha = mine.retweet(msg)\r\ncommit = mine.grit.commit(sha)\r\ncommit.sha            # => d1d22036741d0726901b8e555801885018e7c8df\r\ncommit.message        # => \"Eating a sandwich.\"\r\ncommit.committer      # => #<Grit::Actor \"me ...\">\r\ncommit.committed_date # => Sat Nov 6 12:48:02 -0700 2010\r\ncommit.author         # => #<Grit::Actor \"rick ...\">\r\ncommit.authored_date  # => Sat Nov 6 11:48:02 -0700 2010\r\n```\r\n\r\nAdd your own snarky comment:\r\n\r\n```ruby\r\nsha = mine.retweet(msg, \"TMI, bro!\")\r\ncommit = mine.grit.commit(sha)\r\ncommit.sha            # => 06836ee40595bf06fde3eb276a08b10ac7733a74\r\ncommit.message        # => \"TMI, bro! RT @rick Eating a sandwich.\"\r\n```\r\n\r\n## TODO\r\n\r\n* Twitter pushing support\r\n* Git Notes for Twitter (or other) metadata.\r\n* Better importing.","tagline":"Distributed Twitter implementation in Git.","google":""}